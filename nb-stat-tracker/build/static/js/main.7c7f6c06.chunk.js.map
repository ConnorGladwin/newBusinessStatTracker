{"version":3,"sources":["components/Navbar.js","functions.js","components/Inputs.js","components/Outputs.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","id","href","onClick","e","props","clearStats","React","Component","checkZero","num","undefined","Number","isNaN","parseInt","weightCalc","Math","ceil","Inputs","calcCalls","call","add","callAdd","sub","callSub","appValue","contractValue","pendingValue","payoutValue","mUpdateValue","pUpdateValue","callValue","callSubValue","callAddValue","window","localStorage","getItem","htmlFor","type","name","placeholder","value","onChange","calcStats","target","this","Outputs","calcNBO","apps","contract","calcPayout","pending","payout","calcUpdate","mUpdate","pUpdate","calcTotal","state","nbo","update","total","Main","setState","resetTrigger","setItem","resetState","baseState","event","form","confirm","clear","reset","console","log","getStats","i","length","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c7f6c06.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-xl\">\r\n        <nav className=\"navbar navbar-expand-md navbar-light bg-light w-full px-4 text-xl\">\r\n          <nav className=\"navbar navbar-light bg-light\">\r\n            <span className=\"navbar-brand mb-0 h1\">New Business Stats</span>\r\n          </nav>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item px-1 py-2 mr-2\">\r\n                <button className=\"btn btn-outline-success\" id=\"emailBtn\" href=\"\" onClick={e => this.props.clearStats()}>Coming Soon</button>\r\n              </li>\r\n              <li className=\"nav-item px-1 py-2\">\r\n                <button className=\"btn btn-outline-danger\" id=\"clearBtn\" href=\"\" onClick={e => this.props.clearStats()}>Clear Stats</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar;","// checks that the input number\r\n// and converts anything that isn't \r\n// a number into a 0\r\nexport function checkZero(num) {\r\n  if (num === undefined || null) {\r\n    return num = parseInt(0);\r\n  } else if (Number.isNaN(num)) {\r\n    return num = parseInt(0);\r\n  }\r\n  return parseInt(num)\r\n}\r\n\r\n// weights the input value\r\nexport function weightCalc(num) {\r\n  num = Math.ceil(num / 3);\r\n  return num;\r\n}\r\n","// TODO\r\n\r\nimport React from 'react';\r\nimport { checkZero } from '../functions';\r\n\r\nclass Inputs extends React.Component {\r\n\r\n  calcCalls = () => {\r\n    let call = checkZero(this.props.call);\r\n    const add = checkZero(this.props.callAdd);\r\n    const sub = checkZero(this.props.callSub);\r\n    if (add > 0 || sub > 0) {\r\n      call = ((call - sub) + add);\r\n      return call;\r\n    }\r\n    return call;\r\n  }\r\n\r\n  render() {\r\n\r\n    // pulls the latest value from localHost\r\n    // and applies it to the input field\r\n    let { appValue } = 0;\r\n    let { contractValue } = 0;\r\n    let { pendingValue } = 0;\r\n    let { payoutValue } = 0;\r\n    let { mUpdateValue } = 0;\r\n    let { pUpdateValue } = 0;\r\n    let { callValue } = 0;\r\n    let { callSubValue } = 0;\r\n    let { callAddValue} = 0;\r\n\r\n    // pulls the latest value from localHost\r\n    // and applies it to the input field\r\n    function getValues() {\r\n      appValue = window.localStorage.getItem('apps');\r\n      contractValue = window.localStorage.getItem('contract');\r\n      pendingValue = window.localStorage.getItem('pending');\r\n      payoutValue = window.localStorage.getItem('payout');\r\n      mUpdateValue = window.localStorage.getItem('mUpdate');\r\n      pUpdateValue = window.localStorage.getItem('pUpdate');\r\n      callValue = window.localStorage.getItem('call');\r\n      callSubValue = window.localStorage.getItem('callSub');\r\n      callAddValue = window.localStorage.getItem('callAdd');\r\n\r\n    }\r\n\r\n    getValues();\r\n\r\n    return (\r\n      // Input fields\r\n      <div className=\"mx-auto\">\r\n        <div className=\"flex flex-col items-center h-full\">\r\n          <div>\r\n            {/* NBO */}\r\n            <div className=\"flex border-2 border-black rounded-md mb-2 px-1 py-2\">\r\n              {/* Apps */}\r\n              <div className=\"mx-2\">\r\n                <label htmlFor=\"apps\" className=\"flex justify-start mb-2\">Applications</label>\r\n                <input type=\"number\" name=\"apps\" id=\"apps\" className=\"border-2 border-black rounded-md\" placeholder=\"0\" value={appValue} onChange={e => this.props.calcStats(e.target.value, 'apps')} />\r\n              </div>\r\n              {/* Contracts */}\r\n              <div className=\"mx-2\">\r\n                <label htmlFor=\"contract\" className=\"flex justify-start mb-2\">Contracts</label>\r\n                <input type=\"number\" name=\"contract\" id=\"contract\" className=\"border-2 border-black rounded-md\" placeholder=\"0\" value={contractValue}\r\n                 onChange={e => this.props.calcStats(e.target.value, 'contract')} />\r\n              </div>\r\n            </div>\r\n            {/* Payouts */}\r\n            <div className=\"flex border-2 border-black rounded-md mb-2 px-1 py-2\">\r\n              {/* Pending */}\r\n              <div className=\"mx-2\">\r\n                <label htmlFor=\"pending\" className=\"flex justify-start mb-2\">Payout Pending</label>\r\n                <input type=\"number\" name=\"pending\" id=\"pending\" className=\"border-2 border-black rounded-md mb-2\" placeholder=\"0\" value={pendingValue} onChange={e => this.props.calcStats(e.target.value, 'pending')} />\r\n              </div>\r\n              {/* Payout */}\r\n              <div className=\"mx-2\">\r\n                <label htmlFor=\"payout\" className=\"flex justify-start mb-2\">Payout</label>\r\n                <input type=\"number\" name=\"payout\" id=\"payout\" className=\"border-2 border-black rounded-md mb-2\" placeholder=\"0\" value={payoutValue} onChange={e => this.props.calcStats(e.target.value, 'payout')} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* General Stats */} \r\n          <div className=\"mx-2\">\r\n            {/* Updates */}\r\n            <div className=\"flex border-2 border-black rounded-md mb-2 px-1 py-2\">\r\n              <div className=\"mx-2\">\r\n                <label htmlFor=\"mUpadte\" className=\"flex justify-start mb-2\">Manual Update</label>\r\n                <input type=\"number\" name=\"mUpdate\" id=\"mUpdate\" className=\"border-2 border-black rounded-md mb-2\" placeholder=\"0\" value={mUpdateValue} onChange={e => this.props.calcStats(e.target.value, 'mUpdate')} />\r\n              </div>\r\n              <div className=\"mx-2\">\r\n                <label htmlFor=\"pUpdate\" className=\"flex justify-start mb-2\">Podium Update</label>\r\n                <input type=\"number\" name=\"pUpdate\" id=\"pUpdate\" className=\"border-2 border-black rounded-md mb-2\" placeholder=\"0\" value={pUpdateValue} onChange={e => this.props.calcStats(e.target.value, 'pUpdate')} />\r\n              </div>\r\n            </div>\r\n            {/* Calls */}\r\n            <div className=\"flex mb-2\">\r\n              <div className=\"\">\r\n                <label htmlFor=\"calls\" className=\"flex justify-start mb-2\">Calls</label>\r\n                <input type=\"number\" name=\"calls\" id=\"calls\" className=\"border-2 border-black rounded-md mb-2\" placeholder=\"0\" value={callValue} onChange={e => this.props.calcStats(e.target.value, 'call')} />\r\n              </div>\r\n              <div className=\"w-full mx-2\">\r\n                <label htmlFor=\"calcCalls\" className=\"flex justify-start mb-2\">Calculated Calls</label>\r\n                <p className=\"border-2 border-black rounded-md text-center\">{this.calcCalls()}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Call modifiers */}\r\n          <div className=\"flex flex-col border-2 border-black rounded-md mb-2 px-1 py-2\">\r\n            <label htmlFor=\"callMods\">Call Modifiers</label>\r\n            <div className=\"flex\">\r\n              <div className=\"mx-2\">\r\n                <label htmlFor=\"callSub\" className=\"flex justify-start mb-2\">Subtract</label>\r\n                <input type=\"number\" name=\"callSub\" id=\"callSub\" className=\"border-2 border-black rounded-md mb-2\" placeholder=\"0\" value={callSubValue} onChange={e => this.props.calcStats(e.target.value, 'callSub')} />\r\n              </div>\r\n              <div className=\"mx-2\">\r\n                <label htmlFor=\"callAdd\" className=\"flex justify-start mb-2\">Add</label>\r\n                <input type=\"number\" name=\"callAdd\" id=\"callAdd\" className=\"border-2 border-black rounded-md mb-2\" placeholder=\"0\" value={callAddValue} onChange={e => this.props.calcStats(e.target.value, 'callAdd')} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Inputs;","import React from 'react';\r\nimport { checkZero, weightCalc } from '../functions';\r\n\r\nclass Outputs extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nbo: 0,\r\n      payout: 0,\r\n      update: 0,\r\n      call: 0,\r\n      total: 0\r\n    }\r\n  }\r\n\r\n  // calculates the collated NBO inputs\r\n  calcNBO = () => {\r\n    const a = checkZero(this.props.apps);\r\n    const b = checkZero(this.props.contract);\r\n    const nbo = a + b;\r\n    return nbo;\r\n  }\r\n\r\n  // calculates the collated payout inputs \r\n  calcPayout = () => {\r\n    const a = checkZero(this.props.pending);\r\n    const b = checkZero(this.props.payout);\r\n    const payout = a + b;\r\n    return payout;\r\n  }\r\n\r\n  // calculates and weights the collated update inputs \r\n  calcUpdate = () => {\r\n    const a = checkZero(this.props.mUpdate);\r\n    const b = checkZero(this.props.pUpdate);\r\n    const update  = a + b;\r\n    return weightCalc(update);\r\n  }\r\n\r\n  // calculates and weights the call inputs \r\n  calcCalls = () => {\r\n    let call = checkZero(this.props.call);\r\n    const add = checkZero(this.props.callAdd);\r\n    const sub = checkZero(this.props.callSub);\r\n    if (add > 0 || sub > 0) {\r\n      call = ((call - sub) + add);\r\n      return weightCalc(call);\r\n    }\r\n    return weightCalc(call);\r\n  }\r\n\r\n  // runs all the calculate functions\r\n  // and uses the returned values to output\r\n  // the total\r\n  calcTotal = () => {\r\n    const nbo = this.calcNBO();\r\n    const payout = this.calcPayout();\r\n    const update = this.calcUpdate();\r\n    const calls = this.calcCalls();\r\n    const total = (nbo + payout + update + calls);\r\n    return total;\r\n  }\r\n\r\n  // runs the total function which\r\n  // subsiquently runs the other calc\r\n  // functions\r\n  componentDidUpdate() {\r\n    this.calcTotal()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mx-auto\">\r\n        <div className=\"flex flex-col items-center justify-center h-full\">\r\n          <div className=\"w-full\">\r\n            <div className=\"\">\r\n              <label htmlFor=\"wContract\" className=\"flex justify-start\">NBO</label>\r\n              <p className=\"wContract border-2 border-black rounded-md text-center mb-2\">{this.calcNBO()}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full\">\r\n            <div className=\"\">\r\n              <label htmlFor=\"payout\" className=\"flex justify-start\">Payouts</label>\r\n              <p className=\"wPayout border-2 border-black rounded-md text-center mb-2\">{this.calcPayout()}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full\">\r\n            <div className=\"\">\r\n              <label htmlFor=\"update\" className=\"flex justify-start\">Updates</label>\r\n              <p className=\"wUpdates border-2 border-black rounded-md text-center mb-2\">{this.calcUpdate()}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full\">\r\n            <div className=\"\">\r\n              <label htmlFor=\"calls\" className=\"flex justify-start\">Calls</label>\r\n              <p className=\"wCalls border-2 border-black rounded-md text-center mb-2\">{this.calcCalls()}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full\">\r\n            <div className=\"\">\r\n              <label htmlFor=\"total\" className=\"flex justify-start\">Total Actions</label>\r\n              <p className=\"total border-2 border-black rounded-md text-center mb-2\">{this.calcTotal()}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Outputs;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from './Navbar';\r\nimport Inputs from './Inputs';\r\nimport Outputs from './Outputs';\r\n\r\nclass Main extends React.Component {\r\n\r\n  static propTypes = {\r\n    apps: PropTypes.number,\r\n    contract: PropTypes.number,\r\n    pening: PropTypes.number,\r\n    payout: PropTypes.number,\r\n    calcPayout: PropTypes.number,\r\n    update: PropTypes.number,\r\n    calls: PropTypes.number,\r\n    total: PropTypes.number,\r\n    calcStats: PropTypes.func\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apps: 0,\r\n      contract: 0,\r\n      pending: 0,\r\n      payout: 0,\r\n      mUpdate: 0,\r\n      pUpdate:0,\r\n      call: 0,\r\n      callSub: 0,\r\n      callAdd: 0,\r\n      total: 0,\r\n      resetTrigger: 1\r\n    }\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  // recieves the value and id from the input component\r\n  // and updates state, then sets it to localStorage\r\n  calcStats = (value, id) => {\r\n    this.setState((state) => {\r\n      return {[id]: value} \r\n    });\r\n    this.setState({resetTrigger: this.state.resetTrigger + 1});\r\n    // adds stats to localStorage\r\n    localStorage.setItem(id, value);\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState(this.baseState);\r\n    // const currentState = this.state.apps;\r\n    const resetTrigger = this.state.resetTrigger;\r\n    if (resetTrigger < 1) {\r\n      this.resetState();\r\n    }\r\n  }\r\n\r\n  // clears localStorage and input fields, resets states \r\n  clearStats = (event, form) => {\r\n    if (\r\n      window.confirm (\r\n        'Clear stat tracker? - You will not be able to recover the input items'\r\n      )\r\n    ) {\r\n      window.localStorage.clear();\r\n      this.resetState();\r\n      form.reset();\r\n      console.log('Cleared');\r\n    };\r\n  }\r\n\r\n  getStats = () => {\r\n    console.log(window.localStorage.getItem('apps'));\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      const value = window.localStorage.getItem(key);\r\n      console.log(key, value);\r\n      this.setState({[key]: value});\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getStats();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <Navbar \r\n          clearStats={this.clearStats}\r\n        />\r\n        <div className=\"text-xl\">\r\n          <div className=\"flex mx-14 my-14\">\r\n            <Inputs\r\n              apps={this.state.apps}\r\n              contract={this.state.contract}\r\n              payout={this.state.payout}\r\n              pending={this.state.pending}\r\n              mUpdate={this.state.mUpdate}\r\n              pUpdate={this.state.pUpdate}\r\n              call={this.state.call}\r\n              callAdd={this.state.callAdd}\r\n              callSub={this.state.callSub}\r\n              calcStats={this.calcStats}\r\n            />\r\n            <Outputs\r\n            apps={this.state.apps}\r\n            contract={this.state.contract}\r\n            payout={this.state.payout}\r\n            pending={this.state.pending}\r\n            mUpdate={this.state.mUpdate}\r\n            pUpdate={this.state.pUpdate}\r\n            call={this.state.call}\r\n            callSub={this.state.callSub}\r\n            callAdd={this.state.callAdd}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;","// deps imports\r\nimport './App.css';\r\nimport 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// component imports\r\nimport Main  from './components/Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}